blueprint:
  name: Moes Smart Knob Media Control
  description: Steuert Media-Player 체ber Moes Zigbee Smart Knob via Zigbee2MQTT
  domain: automation
  input:
    media_player_entity:
      name: Media Player
      description: Zu steuernder Media-Player
      selector:
        entity:
          domain: media_player
    smartknob_entity:
      name: SmartKnob Event Entity
      description: Die Zigbee2MQTT-Entit채t des Smart Knobs (z.B. sensor.0x12345678_action)
      selector:
        entity:
          domain: sensor
          integration: zigbee2mqtt
    volume_step:
      name: Volume Schritt in %
      description: Lautst채rke채nderung pro Drehschritt (1-100%)
      default: 5
      selector:
        number:
          min: 1
          max: 100
          step: 1
          unit_of_measurement: '%'

variables:
  vol_step: !input volume_step

trigger:
  - platform: event
    event_type: zigbee2mqtt_event
    event_data:
      device: 
        ieee_address: "{{ state_attr(input.smartknob_entity, 'ieee') }}"
      action: rotate_left
  - platform: event
    event_type: zigbee2mqtt_event
    event_data:
      device: 
        ieee_address: "{{ state_attr(input.smartknob_entity, 'ieee') }}"
      action: rotate_right
  - platform: event
    event_type: zigbee2mqtt_event
    event_data:
      device: 
        ieee_address: "{{ state_attr(input.smartknob_entity, 'ieee') }}"
      action: press
  - platform: event
    event_type: zigbee2mqtt_event
    event_data:
      device: 
        ieee_address: "{{ state_attr(input.smartknob_entity, 'ieee') }}"
      action: press_and_hold

action:
  - choose:
      - conditions: "{{ trigger.event.data.action == 'rotate_left' }}"
        sequence:
          - service: media_player.volume_down
            target:
              entity_id: !input media_player_entity
            data:
              volume_step: "{{ (vol_step / 100)|float }}"
      - conditions: "{{ trigger.event.data.action == 'rotate_right' }}"
        sequence:
          - service: media_player.volume_up
            target:
              entity_id: !input media_player_entity
            data:
              volume_step: "{{ (vol_step / 100)|float }}"
      - conditions: "{{ trigger.event.data.action == 'press' }}"
        sequence:
          - service: media_player.media_play_pause
            target:
              entity_id: !input media_player_entity
      - conditions: "{{ trigger.event.data.action == 'press_and_hold' }}"
        sequence:
          - service: media_player.media_next_track
            target:
              entity_id: !input media_player_entity
    default: []
