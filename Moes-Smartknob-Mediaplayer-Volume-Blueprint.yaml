blueprint:
  name: Moes Smart Knob Media Control
  description: Steuert Media-Player über Moes Zigbee Smart Knob via Zigbee2MQTT
  domain: automation
  input:
    media_player_entity:
      name: Media Player
      description: Zu steuernder Media-Player
      selector:
        entity:
          domain: media_player
    zigbee_device:
      name: Zigbee2MQTT Gerät
      description: Wähle deinen Moes Smart Knob aus der Liste
      selector:
        device:
          integration: zigbee2mqtt
          manufacturer: Moes
    volume_step:
      name: Lautstärke-Schritt
      description: Lautstärkeänderung pro Klick in Prozent (1-100)
      default: 5
      selector:
        number:
          min: 1
          max: 100
          step: 1
          unit_of_measurement: '%'

variables:
  VOLUME_STEP: !input volume_step

trigger:
  - platform: event
    event_type: zigbee2mqtt_event
    event_data:
      device:
        ieee_address: >-
          {{ device_attr(device_id(input.zigbee_device), 'identifiers') | 
             map('selectattr', 0, 'eq', 'zigbee2mqtt') |
             map('last') |
             first }}
      action: 
        - rotate_left
        - rotate_right
        - press
        - press_and_hold

action:
  - choose:
      - conditions: "{{ trigger.event.data.action == 'rotate_left' }}"
        sequence:
          - service: media_player.volume_down
            target:
              entity_id: !input media_player_entity
            data:
              volume_step: "{{ (VOLUME_STEP / 100)|float }}"
      - conditions: "{{ trigger.event.data.action == 'rotate_right' }}"
        sequence:
          - service: media_player.volume_up
            target:
              entity_id: !input media_player_entity
            data:
              volume_step: "{{ (VOLUME_STEP / 100)|float }}"
      - conditions: "{{ trigger.event.data.action == 'press' }}"
        sequence:
          - service: media_player.media_play_pause
            target:
              entity_id: !input media_player_entity
      - conditions: "{{ trigger.event.data.action == 'press_and_hold' }}"
        sequence:
          - service: media_player.media_next_track
            target:
              entity_id: !input media_player_entity
    default: []
