blueprint:
  name: Zigbee Smart Knob Media Control
  description: Steuert Mediaplayer-Lautstärke mit Zigbee2MQTT Drehknopf (ERS-10TZBVK-AA/TS004F)
  domain: automation
  input:
    smartknob_device:
      name: Smart Knob Gerät
      description: Auswahl des Zigbee2MQTT Drehknopfs
      selector:
        device:
          integration: zigbee2mqtt
          manufacturer: "_TZ3000_*"
          model: "ERS-10TZBVK-AA"
    media_player:
      name: Media Player
      description: Zu steuernder Media Player
      selector:
        entity:
          domain: media_player
    volume_step:
      name: Lautstärke-Schritt
      description: Prozentuale Schrittgröße (1-10%)
      default: 5
      selector:
        number:
          min: 1
          max: 10
          step: 1
          unit_of_measurement: '%'
    press_action:
      name: Knopfdruck-Funktion
      description: Aktion bei kurzem Druck
      default: play_pause
      selector:
        select:
          options:
            - play_pause
            - mute
            - none
          mode: dropdown

trigger:
  - platform: mqtt
    topic: "zigbee2mqtt/{{ device.name }}/action"
    payload: "rotate_left"
    value_template: "{{ value_json.action }}"
    id: rotate_left
  - platform: mqtt
    topic: "zigbee2mqtt/{{ device.name }}/action"
    payload: "rotate_right"
    value_template: "{{ value_json.action }}"
    id: rotate_right
  - platform: mqtt
    topic: "zigbee2mqtt/{{ device.name }}/action"
    payload: "press"
    value_template: "{{ value_json.action }}"
    id: button_press

action:
  - choose:
      - conditions: "{{ trigger.id in ['rotate_left', 'rotate_right'] }}"
        sequence:
          - service: media_player.volume_set
            target:
              entity_id: !input media_player
            data_template:
              volume_level: >-
                {% set current = state_attr(input.media_player, 'volume_level')|default(0) %}
                {% set step = (input.volume_step / 100) %}
                {% set new_vol = current - step if trigger.id == 'rotate_left' else current + step %}
                {{ [0, new_vol]|max if trigger.id == 'rotate_left' else [1, new_vol]|min }}
                
      - conditions: "{{ trigger.id == 'button_press' and input.press_action != 'none' }}"
        sequence:
          - service: >
              {% if input.press_action == 'play_pause' %}
                media_player.media_play_pause
              {% else %}
                media_player.volume_mute
              {% endif %}
            target:
              entity_id: !input media_player
            data_template: >-
              {% if input.press_action == 'mute' %}
                {"is_volume_muted": {{ not state_attr(input.media_player, 'is_volume_muted') }} }
              {% else %}
                {}
              {% endif %}

mode: queued
max: 10
