blueprint:
  name: Raw MQTT Knob Media Control
  description: Steuert Mediaplayer 체ber direkte MQTT-Topics (Umgeht Ger채teerkennung)
  domain: automation
  input:
    mqtt_topic:
      name: MQTT Action Topic
      description: Vollst채ndiges Topic (z.B. zigbee2mqtt/mein_knob/action)
      selector:
        text:
    media_player:
      name: Media Player
      selector:
        entity:
          domain: media_player
    volume_step:
      name: Lautst채rke-Schritt (%)
      default: 5
      selector:
        number:
          min: 1
          max: 20
          step: 1
    press_action:
      name: Knopfdruck-Aktion
      default: play_pause
      selector:
        select:
          options: [play_pause, mute, none]

trigger:
  - platform: mqtt
    topic: !input mqtt_topic
    id: knob_action
    value_template: "{{ value_json.action }}"

action:
  - choose:
      - conditions: "{{ trigger.value in ['rotate_left', 'brightness_step_down', 'step_down', 'left'] }}"
        sequence:
          - service: media_player.volume_set
            target:
              entity_id: !input media_player
            data_template:
              volume_level: >-
                {% set current = state_attr(input.media_player, 'volume_level')|default(0) %}
                {% set step = (input.volume_step / 100) %}
                {{ [0.0, current - step]|max }}

      - conditions: "{{ trigger.value in ['rotate_right', 'brightness_step_up', 'step_up', 'right'] }}"
        sequence:
          - service: media_player.volume_set
            target:
              entity_id: !input media_player
            data_template:
              volume_level: >-
                {% set current = state_attr(input.media_player, 'volume_level')|default(0) %}
                {% set step = (input.volume_step / 100) %}
                {{ [1.0, current + step]|min }}

      - conditions: "{{ trigger.value in ['single', 'toggle', 'press', 'click'] && input.press_action != 'none' }}"
        sequence:
          - service: >
              {% if input.press_action == 'play_pause' %}
                media_player.media_play_pause
              {% else %}
                media_player.volume_mute
              {% endif %}
            target:
              entity_id: !input media_player
            data_template: >-
              {% if input.press_action == 'mute' %}
                {"is_volume_muted": {{ not state_attr(input.media_player, 'is_volume_muted') }} }
              {% endif %}

mode: queued
