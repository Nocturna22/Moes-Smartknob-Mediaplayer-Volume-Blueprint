blueprint:
  name: Zigbee Knob Media Control
  description: Steuert Mediaplayer über Zigbee-Drehknöpfe
  domain: automation
  input:
    zigbee_device:
      name: Zigbee Gerät
      description: "Automatische Auswahl aus Zigbee2MQTT-Geräten"
      selector:
        entity:
          integration: zigbee2mqtt
    manual_device:
      name: Manueller Gerätename
      description: "Alternativ: Gerätename aus Zigbee2MQTT (z.B. 'my_knob')"
      selector:
        text:
    media_player:
      name: Media Player
      selector:
        entity:
          domain: media_player
    volume_step:
      name: Lautstärke-Schritt (%)
      default: 5
      selector:
        number:
          min: 1
          max: 20
          step: 1
    press_action:
      name: Knopfdruck-Aktion
      default: play_pause
      selector:
        select:
          options: [play_pause, mute, none]

trigger:
  - platform: mqtt
    topic: >-
      {% if zigbee_device %}
        zigbee2mqtt/{{ state_attr(zigbee_device, "friendly_name") }}/action
      {% else %}
        zigbee2mqtt/{{ manual_device }}/action
      {% endif %}
    id: knob_action
    value_template: "{{ value_json.action }}"

action:
  - choose:
      - conditions: "{{ trigger.value in ['rotate_left', 'brightness_step_down', 'step_down', 'left'] }}"
        sequence:
          - service: media_player.volume_set
            target:
              entity_id: !input media_player
            data_template:
              volume_level: >-
                {% set current = state_attr(input.media_player, 'volume_level')|default(0) %}
                {{ (current - (input.volume_step / 100))|max(0.0) }}

      - conditions: "{{ trigger.value in ['rotate_right', 'brightness_step_up', 'step_up', 'right'] }}"
        sequence:
          - service: media_player.volume_set
            target:
              entity_id: !input media_player
            data_template:
              volume_level: >-
                {% set current = state_attr(input.media_player, 'volume_level')|default(0) %}
                {{ (current + (input.volume_step / 100))|min(1.0) }}

      - conditions: "{{ trigger.value in ['single', 'toggle', 'press', 'click'] and input.press_action != 'none' }}"
        sequence:
          - service: >
              {% if input.press_action == 'play_pause' %}
                media_player.media_play_pause
              {% else %}
                media_player.volume_mute
              {% endif %}
            target:
              entity_id: !input media_player
            data_template: >-
              {% if input.press_action == 'mute' %}
                {"is_volume_muted": {{ not state_attr(input.media_player, 'is_volume_muted') }} }
              {% endif %}

mode: queued
